"""
Django settings for FMuya Discovery proto project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import environ
import datetime
from pathlib import Path
from django.core.exceptions import ImproperlyConfigured
from django.utils.translation import gettext_lazy as _

env = environ.Env()

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "console": {
            # format does not provide timestamp as in prod this will be provided by greylog
            "format": "[%(levelname)s] %(name)s.%(funcName)s:%(lineno)s - %(message)s"
        }
    },
    "handlers": {
        "console": {"class": "logging.StreamHandler", "formatter": "console"},
    },
    #    'root': {
    #        'level': 'INFO',
    #        'propagate': True,
    #        'handlers': ['console']
    #        },
    "loggers": {
        #        '': {
        #            'level': 'INFO',
        #            'propagate': True,
        #            'handlers': ['console']
        #        },
        "api": {"level": "INFO", "propagate": True, "handlers": ["console"]},
        "yasna": {"level": "INFO", "propagate": True, "handlers": ["console"]},
    },
}


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "a78)2yet@fa)ll+$(_)f#6p=12j$oox)z!bcr6649uf!h44!y_"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DJANGO_DEBUG", False)

# Facet on Manifets
FACET_ON_MANIFESTS_ONLY = env.bool("FACET_ON_MANIFESTS", False)

# Use fulltext querying for non-latin scripts
NONLATIN_FULLTEXT = env.bool("NONLATIN_FULLTEXT", False)

# Search across multiple fields on a "fulltext" query (if True), will disable fulltext features
SEARCH_MULTIPLE_FIELDS = env.bool("SEARCH_MULTIPLE_FIELDS", False)

# Thumbnail request: if set to True if no thumbnail service/block is present on a IIIF resource,
# fallback to constructing a thumbnail from the image service on the first canvas in that resource on ingest
# defaults to True, but typically set to False during test coverage, so that we can mock services locally
THUMBNAIL_FALLBACK = env.bool("THUMBNAIL_FALLBACK", False)

try:
    ALLOWED_HOSTS = ["localhost", "0.0.0.0", "127.0.0.1"] + env.list("ALLOWED_HOSTS")
except ImproperlyConfigured:
    ALLOWED_HOSTS = ["localhost", "0.0.0.0", "127.0.0.1"]
try:
    ALLOWED_CIDR_NETS = env.list("ALLOWED_CIDR_NETS")
except ImproperlyConfigured:
    print("Allowed CIDR Nets is not set")

# HOSTNAME set by docker-compose
CANONICAL_HOSTNAME = env.str("CANONICAL_HOSTNAME", "https://muya.ch.digtest.co.uk")

# Set CSRF_TRUSTED_ORIGINS

CSRF_TRUSTED_ORIGINS = ["http://localhost", "http://localhost:8000", CANONICAL_HOSTNAME]

# Application definition
DEBUG_TOOLBAR_PATCH_SETTINGS = False

# Facet on Manifets
FACET_ON_MANIFESTS_ONLY = env.bool("FACET_ON_MANIFESTS", False)

INSTALLED_APPS = [
    "bootstrap5",
    "django.contrib.gis",
    "modeltranslation",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_webserver",
    "django.contrib.postgres",
    "django_extensions",
    "reversion",
    "rest_framework",
    "debug_toolbar",
    "django_filters",
    "corsheaders",
    "api.apps.ApiConfig",
    "yasna.apps.YasnaConfig",
    "django_avroserializer.apps.DjangoAvroSerializerConfig",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "allow_cidr.middleware.AllowCIDRMiddleware",
    "django.middleware.common.CommonMiddleware",
]

ROOT_URLCONF = "yasna_backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            BASE_DIR / "templates",
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ]
        },
    }
]

WSGI_APPLICATION = "yasna_backend.wsgi.application"

# REST Framework

authentication_on = env.bool("REQUIRE_AUTH", True)

REST_FRAMEWORK = {
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 25,
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.BasicAuthentication",
        "rest_framework.authentication.SessionAuthentication",
    ],
}

MAX_PAGE_SIZE = env.int("MAX_PAGE_SIZE", None)


if authentication_on:
    REST_FRAMEWORK.update(
        {
            "DEFAULT_PERMISSION_CLASSES": [
                "rest_framework.permissions.IsAuthenticatedOrReadOnly",
            ]
        }
    )

SERIALIZATION_MODULES = {"avro": "django_avroserializer.avroserializer"}

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases


DATABASES = {"default": env.db("DATABASE_URL")}
DATABASES["default"]["ENGINE"] = "django.contrib.gis.db.backends.postgis"


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = "en"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True

LANGUAGES = (
    ("en", _("English")),
    ("es", _("Spanish")),
)

MODELTRANSLATION_FALLBACK_LANGUAGES = {"default": ("en",)}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_ROOT = BASE_DIR.parent / "app_static"
STATIC_URL = "/static/"

MEDIA_ROOT = BASE_DIR.parent / "app_media"
MEDIA_URL = "/media/"

CORS_ORIGIN_ALLOW_ALL = True
SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")


if DEBUG:
    DEBUG_TOOLBAR_CONFIG = {
        "SHOW_TOOLBAR_CALLBACK": lambda x: True,
    }

DATA_UPLOAD_MAX_MEMORY_SIZE = 20 * 1048576
